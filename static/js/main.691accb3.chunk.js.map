{"version":3,"sources":["App.tsx","index.tsx"],"names":["SortType","goodsFromServer","App","state","isReversed","sortType","NONE","actionType","this","setState","ALPHABET","LENGTH","sortedGoods","goods","visibleGoods","sort","firstGood","secondGood","localeCompare","length","reverse","getReorderedGoods","className","onClick","changeSortParameters","type","map","good","React","Component","ReactDOM","render","document","getElementById"],"mappings":"iKAiBKA,E,wFAbQC,EAAkB,CAC7B,YACA,SACA,OACA,YACA,QACA,QACA,OACA,QACA,MACA,W,SAGGD,O,eAAAA,I,uBAAAA,I,oBAAAA,M,KA+CE,IAAME,EAAb,4MACEC,MAAQ,CACNC,YAAY,EACZC,SAAUL,EAASM,MAHvB,0DAME,SAAqBC,GACA,YAAfA,GACFC,KAAKC,UAAS,SAACN,GAAD,MAAY,CAAEC,YAAaD,EAAMC,eAG9B,UAAfG,GACFC,KAAKC,SAAS,CAAEL,YAAY,EAAOC,SAAUL,EAASM,OAGrC,iBAAfC,GACFC,KAAKC,SAAS,CAAEJ,SAAUL,EAASU,WAGlB,eAAfH,GACFC,KAAKC,SAAS,CAAEJ,SAAUL,EAASW,WApBzC,oBAwBE,WAAU,IAAD,OACP,EAAiCH,KAAKL,MAA9BC,EAAR,EAAQA,WAAYC,EAApB,EAAoBA,SACdO,EA7DH,SACLC,EADK,GAGJ,IADCR,EACF,EADEA,SAAUD,EACZ,EADYA,WAGNU,EAAY,YAAOD,GAsBzB,OAlBIR,IAAaL,EAASM,MACxBQ,EAAaC,MAAK,SAACC,EAAWC,GAC5B,OAAIZ,IAAaL,EAASU,SACjBM,EAAUE,cAAcD,GAG7BZ,IAAaL,EAASW,OACjBK,EAAUG,OAASF,EAAWE,OAGhC,KAIPf,GACFU,EAAaM,UAGRN,EAkCeO,CAClBpB,EACA,CAAEI,WAAUD,eAGd,OACE,sBAAKkB,UAAU,kBAAf,UACE,sBAAKA,UAAU,UAAf,UACE,wBACEC,QAAS,kBAAO,EAAKC,qBAAqB,iBAC1CC,KAAK,SACLH,UAAS,yBAAoBjB,IAAaL,EAASU,SAAW,WAAa,IAH7E,iCAQA,wBACEa,QAAS,kBAAO,EAAKC,qBAAqB,eAC1CC,KAAK,SACLH,UAAS,4BAAuBjB,IAAaL,EAASW,OAAS,WAAa,IAH9E,4BAQA,wBACEY,QAAS,kBAAO,EAAKC,qBAAqB,YAC1CC,KAAK,SACLH,UAAS,4BAAwBlB,EAA0B,GAAb,YAHhD,sBAQEC,IAAaL,EAASM,MAAQF,IAC9B,wBACEmB,QAAS,kBAAO,EAAKC,qBAAqB,UAC1CC,KAAK,SACLH,UAAU,4BAHZ,sBAUJ,6BACGV,EAAYc,KAAI,SAACC,GAAD,OACf,oBAAI,UAAQ,OAAZ,SAAoBA,gBAvEhC,GAAyBC,IAAMC,WC7D/BC,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.691accb3.chunk.js","sourcesContent":["import React from 'react';\nimport 'bulma/css/bulma.css';\nimport './App.scss';\n\nexport const goodsFromServer = [\n  'Dumplings',\n  'Carrot',\n  'Eggs',\n  'Ice cream',\n  'Apple',\n  'Bread',\n  'Fish',\n  'Honey',\n  'Jam',\n  'Garlic',\n];\n\nenum SortType {\n  NONE,\n  ALPHABET,\n  LENGTH,\n}\n\ntype ReorderOptions = {\n  sortType: SortType,\n  isReversed: boolean,\n};\n\n// Use this function in the render method to prepare goods\nexport function getReorderedGoods(\n  goods: string[],\n  { sortType, isReversed }: ReorderOptions,\n) {\n  // To avoid the original array mutation\n  const visibleGoods = [...goods];\n\n  // Sort and reverse goods if needed\n  // eslint-disable-next-line no-console\n  if (sortType !== SortType.NONE) {\n    visibleGoods.sort((firstGood, secondGood) => {\n      if (sortType === SortType.ALPHABET) {\n        return firstGood.localeCompare(secondGood);\n      }\n\n      if (sortType === SortType.LENGTH) {\n        return firstGood.length - secondGood.length;\n      }\n\n      return 0; // this is to make linter shut the hell up\n    });\n  }\n\n  if (isReversed) {\n    visibleGoods.reverse();\n  }\n\n  return visibleGoods;\n}\n\ntype State = {\n  isReversed: boolean,\n  sortType: SortType,\n};\n\nexport class App extends React.Component<{}, State> {\n  state = {\n    isReversed: false,\n    sortType: SortType.NONE,\n  };\n\n  changeSortParameters(actionType: string) {\n    if (actionType === 'reverse') {\n      this.setState((state) => ({ isReversed: !state.isReversed }));\n    }\n\n    if (actionType === 'reset') {\n      this.setState({ isReversed: false, sortType: SortType.NONE });\n    }\n\n    if (actionType === 'sortAlphabet') {\n      this.setState({ sortType: SortType.ALPHABET });\n    }\n\n    if (actionType === 'sortLength') {\n      this.setState({ sortType: SortType.LENGTH });\n    }\n  }\n\n  render() {\n    const { isReversed, sortType } = this.state;\n    const sortedGoods = getReorderedGoods(\n      goodsFromServer,\n      { sortType, isReversed },\n    );\n\n    return (\n      <div className=\"section content\">\n        <div className=\"buttons\">\n          <button\n            onClick={() => (this.changeSortParameters('sortAlphabet'))}\n            type=\"button\"\n            className={`button is-info ${sortType !== SortType.ALPHABET ? 'is-light' : ''}`}\n          >\n            Sort alphabetically\n          </button>\n\n          <button\n            onClick={() => (this.changeSortParameters('sortLength'))}\n            type=\"button\"\n            className={`button is-success ${sortType !== SortType.LENGTH ? 'is-light' : ''}`}\n          >\n            Sort by length\n          </button>\n\n          <button\n            onClick={() => (this.changeSortParameters('reverse'))}\n            type=\"button\"\n            className={`button is-warning ${!isReversed ? 'is-light' : ''}`}\n          >\n            Reverse\n          </button>\n\n          {(sortType !== SortType.NONE || isReversed) && (\n            <button\n              onClick={() => (this.changeSortParameters('reset'))}\n              type=\"button\"\n              className=\"button is-danger is-light\"\n            >\n              Reset\n            </button>\n          )}\n        </div>\n\n        <ul>\n          {sortedGoods.map((good) => (\n            <li data-cy=\"Good\">{good}</li>\n          ))}\n        </ul>\n      </div>\n    );\n  }\n}\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}