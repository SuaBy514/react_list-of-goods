{"version":3,"sources":["App.tsx","index.tsx"],"names":["SortType","goodsFromServer","App","state","isReversed","sortType","NONE","this","setState","ALPHABET","LENGTH","visibleGoods","goods","sort","firstGood","secondGood","localeCompare","length","reverse","getReorderedGoods","className","onClick","sortAlphabetically","type","sortByLength","reverseOrder","reset","map","good","React","Component","ReactDOM","render","document","getElementById"],"mappings":"iKAiBKA,E,wFAbQC,EAAkB,CAC7B,YACA,SACA,OACA,YACA,QACA,QACA,OACA,QACA,MACA,W,SAGGD,O,eAAAA,I,uBAAAA,I,oBAAAA,M,KA8CE,IAAME,EAAb,4MACEC,MAAQ,CACNC,YAAY,EACZC,SAAUL,EAASM,MAHvB,2CAME,WACEC,KAAKC,SAAS,CAAEJ,YAAY,EAAOC,SAAUL,EAASM,SAP1D,0BAUE,WACEC,KAAKC,UAAS,SAACL,GAAD,MAAY,CAAEC,YAAaD,EAAMC,iBAXnD,gCAcE,WACEG,KAAKC,SAAS,CAAEH,SAAUL,EAASS,aAfvC,0BAkBE,WACEF,KAAKC,SAAS,CAAEH,SAAUL,EAASU,WAnBvC,oBAsBE,WAAU,IAAD,OACP,EAAiCH,KAAKJ,MAA9BC,EAAR,EAAQA,WAAYC,EAApB,EAAoBA,SACdM,EA1DH,SACLC,EADK,GAGJ,IADCP,EACF,EADEA,SAAUD,EACZ,EADYA,WAGNO,EAAY,YAAOC,GA0BzB,OAtBIP,IAAaL,EAASM,MACxBK,EAAaE,MAAK,SAACC,EAAWC,GAC5B,OAAQV,GACN,KAAKL,EAASS,SACZ,OAAOK,EAAUE,cAAcD,GAGjC,KAAKf,EAASU,OACZ,OAAOI,EAAUG,OAASF,EAAWE,OAGvC,QACE,OAAO,MAMXb,GACFO,EAAaO,UAGRP,EA2BgBQ,CACnBlB,EACA,CAAEI,WAAUD,eAGd,OACE,sBAAKgB,UAAU,kBAAf,UACE,sBAAKA,UAAU,UAAf,UACE,wBACEC,QAAS,kBAAO,EAAKC,sBACrBC,KAAK,SACLH,UAAS,yBAAoBf,IAAaL,EAASS,SAAW,WAAa,IAH7E,iCAQA,wBACEY,QAAS,kBAAO,EAAKG,gBACrBD,KAAK,SACLH,UAAS,4BAAuBf,IAAaL,EAASU,OAAS,WAAa,IAH9E,4BAQA,wBACEW,QAAS,kBAAO,EAAKI,gBACrBF,KAAK,SACLH,UAAS,4BAAwBhB,EAA0B,GAAb,YAHhD,sBAQEC,IAAaL,EAASM,MAAQF,IAC9B,wBACEiB,QAAS,kBAAO,EAAKK,SACrBH,KAAK,SACLH,UAAU,4BAHZ,sBAUJ,6BACGT,EAAagB,KAAI,SAACC,GAAD,OAChB,oBAAe,UAAQ,OAAvB,SAA+BA,GAAtBA,eArErB,GAAyBC,IAAMC,WC5D/BC,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.b90cc97c.chunk.js","sourcesContent":["import React from 'react';\nimport 'bulma/css/bulma.css';\nimport './App.scss';\n\nexport const goodsFromServer = [\n  'Dumplings',\n  'Carrot',\n  'Eggs',\n  'Ice cream',\n  'Apple',\n  'Bread',\n  'Fish',\n  'Honey',\n  'Jam',\n  'Garlic',\n];\n\nenum SortType {\n  NONE,\n  ALPHABET,\n  LENGTH,\n}\n\ntype ReorderOptions = {\n  sortType: SortType,\n  isReversed: boolean,\n};\n\n// Use this function in the render method to prepare goods\nexport function getReorderedGoods(\n  goods: string[],\n  { sortType, isReversed }: ReorderOptions,\n) {\n  // To avoid the original array mutation\n  const visibleGoods = [...goods];\n\n  // Sort and reverse goods if needed\n  // eslint-disable-next-line no-console\n  if (sortType !== SortType.NONE) {\n    visibleGoods.sort((firstGood, secondGood) => {\n      switch (sortType) {\n        case SortType.ALPHABET: {\n          return firstGood.localeCompare(secondGood);\n        }\n\n        case SortType.LENGTH: {\n          return firstGood.length - secondGood.length;\n        }\n\n        default: {\n          return 0; // this is to make linter shut the hell up\n        }\n      }\n    });\n  }\n\n  if (isReversed) {\n    visibleGoods.reverse();\n  }\n\n  return visibleGoods;\n}\n\nexport class App extends React.Component<{}, ReorderOptions> {\n  state = {\n    isReversed: false,\n    sortType: SortType.NONE,\n  };\n\n  reset() {\n    this.setState({ isReversed: false, sortType: SortType.NONE });\n  }\n\n  reverseOrder() {\n    this.setState((state) => ({ isReversed: !state.isReversed }));\n  }\n\n  sortAlphabetically() {\n    this.setState({ sortType: SortType.ALPHABET });\n  }\n\n  sortByLength() {\n    this.setState({ sortType: SortType.LENGTH });\n  }\n\n  render() {\n    const { isReversed, sortType } = this.state;\n    const visibleGoods = getReorderedGoods(\n      goodsFromServer,\n      { sortType, isReversed },\n    );\n\n    return (\n      <div className=\"section content\">\n        <div className=\"buttons\">\n          <button\n            onClick={() => (this.sortAlphabetically())}\n            type=\"button\"\n            className={`button is-info ${sortType !== SortType.ALPHABET ? 'is-light' : ''}`}\n          >\n            Sort alphabetically\n          </button>\n\n          <button\n            onClick={() => (this.sortByLength())}\n            type=\"button\"\n            className={`button is-success ${sortType !== SortType.LENGTH ? 'is-light' : ''}`}\n          >\n            Sort by length\n          </button>\n\n          <button\n            onClick={() => (this.reverseOrder())}\n            type=\"button\"\n            className={`button is-warning ${!isReversed ? 'is-light' : ''}`}\n          >\n            Reverse\n          </button>\n\n          {(sortType !== SortType.NONE || isReversed) && (\n            <button\n              onClick={() => (this.reset())}\n              type=\"button\"\n              className=\"button is-danger is-light\"\n            >\n              Reset\n            </button>\n          )}\n        </div>\n\n        <ul>\n          {visibleGoods.map((good) => (\n            <li key={good} data-cy=\"Good\">{good}</li>\n          ))}\n        </ul>\n      </div>\n    );\n  }\n}\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}